{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\taylo\\\\Desktop\\\\TaylorCoding\\\\React Course\\\\Auth\\\\src\\\\store\\\\AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  logIn: token => {},\n  logOut: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [token, setToken] = useState(null);\n  const userIsLoggedIn = !!token; //boolean\n\n  const logInHandler = token => {\n    setToken(token);\n  };\n\n  const logOutHandler = () => {\n    setToken(null);\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    logIn: logInHandler,\n    logOut: logOutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"e+LEOB8XbRIRiSUQHKM4ToWFki4=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/taylo/Desktop/TaylorCoding/React Course/Auth/src/store/AuthContext.js"],"names":["React","useState","AuthContext","createContext","token","isLoggedIn","logIn","logOut","AuthContextProvider","props","setToken","userIsLoggedIn","logInHandler","logOutHandler","contextValue","children"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,GAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,KAAK,EAAE,EAD+B;AAEtCC,EAAAA,UAAU,EAAE,KAF0B;AAGtCC,EAAAA,KAAK,EAAGF,KAAD,IAAW,CAAE,CAHkB;AAItCG,EAAAA,MAAM,EAAE,MAAM,CAAE;AAJsB,CAApB,CAApB;AAOA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMU,cAAc,GAAG,CAAC,CAACP,KAAzB,CAF4C,CAEZ;;AAEhC,QAAMQ,YAAY,GAAIR,KAAD,IAAW;AAC9BM,IAAAA,QAAQ,CAACN,KAAD,CAAR;AACD,GAFD;;AAGA,QAAMS,aAAa,GAAG,MAAM;AAC1BH,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD;;AAIA,QAAMI,YAAY,GAAG;AACnBV,IAAAA,KAAK,EAAEA,KADY;AAEnBC,IAAAA,UAAU,EAAEM,cAFO;AAGnBL,IAAAA,KAAK,EAAEM,YAHY;AAInBL,IAAAA,MAAM,EAAEM;AAJW,GAArB;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,YAA7B;AAAA,cACGL,KAAK,CAACM;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAtBM;;GAAMP,mB;;KAAAA,mB;AAwBb,eAAeN,WAAf","sourcesContent":["import { React, useState } from \"react\";\r\n\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  logIn: (token) => {},\r\n  logOut: () => {},\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const [token, setToken] = useState(null);\r\n  const userIsLoggedIn = !!token; //boolean\r\n\r\n  const logInHandler = (token) => {\r\n    setToken(token);\r\n  };\r\n  const logOutHandler = () => {\r\n    setToken(null);\r\n  };\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    logIn: logInHandler,\r\n    logOut: logOutHandler,\r\n  };\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"]},"metadata":{},"sourceType":"module"}